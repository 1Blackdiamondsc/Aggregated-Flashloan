{
  "contractName": "AggregatedFlashloans",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "invoke",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "WithdrawBalance",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"constant\":false,\"inputs\":[],\"name\":\"WithdrawBalance\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"invoke\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"WithdrawBalance()\":{\"notice\":\"***Step 3: sweep entire balance on the contract back to contract owner\"},\"execute(bytes)\":{\"notice\":\"Mid-flash loan aggregation logic i.e. what you do with the temporarily acquired flash liquidity from DyDx and Aave\"}}}},\"settings\":{\"compilationTarget\":{\"/home/fifi/dev/aggregated-flashloans/contracts/AggregatedFlashloans.sol\":\"AggregatedFlashloans\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/fifi/dev/aggregated-flashloans/contracts/AggregatedFlashloans.sol\":{\"keccak256\":\"0x8d306e5eb0f87157fae792d0e2f137796ddf74313b8d28cbfdccbf33bce61be7\",\"urls\":[\"bzz-raw://c9140bdca551895a398c3896134562f7aa17bf928cc1c6cc1efa0d4ea3d0c476\",\"dweb:/ipfs/Qmdh6gcVSNuruwg3AYoHFL4d7NwaEviJdwghqmWdeoXngZ\"]},\"@kollateral/contracts/invoke/IInvocationHook.sol\":{\"keccak256\":\"0x253d3844329ed0f165dc886843ea2bf63098eae72b83896d2be6f1294923b3a2\",\"urls\":[\"bzz-raw://d2e1a91b9c771f96be13e5feb0e4546e20db3512fcea4beb3033df6bfba437e1\",\"dweb:/ipfs/QmfSru9ZpS5Z8BHv7NDZJ8U2ogZhz6NUGE8bztfgmRLCe7\"]},\"@kollateral/contracts/invoke/IInvokable.sol\":{\"keccak256\":\"0x8b0c54972b34d55f04ff36804ae959a02fb20aaee034c48c5d8ecbded5ce1eb3\",\"urls\":[\"bzz-raw://f67731b87eb24b35e318df62ea7c0c7259be2a98c80636a3d0e13b8e065fb486\",\"dweb:/ipfs/QmWTurMU3jxNaFrhSNzxb6Y9PMcNuZxWinrZFrDUBm4W5i\"]},\"@kollateral/contracts/invoke/IInvoker.sol\":{\"keccak256\":\"0x04d8a8f48a9844aee61280e92dbc7136c1f807e6f1ef85a0a5318066a4648194\",\"urls\":[\"bzz-raw://bf7b7d45d07491e67c08eddab5f05ff6f85d02cd608c119eca49f5fed1bfa17d\",\"dweb:/ipfs/QmQmwvrSzrNMmXRdGSrPY461MN3KmBhFW95391s1xpwV57\"]},\"@kollateral/contracts/invoke/KollateralInvokable.sol\":{\"keccak256\":\"0xf46d9c7ad73c0f1a5dbe8366dbd75451bc51f58ec2740aedf5b29e9a1210c681\",\"urls\":[\"bzz-raw://3ef9284ebfd8e7cdb08f2a5d0c81691fd53a7dd640331aa2a9b115fb92b187c4\",\"dweb:/ipfs/QmXEU9qjm1LyLNTRaQ23JDKbEq5KFDje7FzkpCatRhdLnQ\"]},\"@kollateral/contracts/utils/BalanceCarrier.sol\":{\"keccak256\":\"0x39687486a8174b92a48403deca69cc95687f330ad245ba0b49e7d78811c74692\",\"urls\":[\"bzz-raw://e77249d96fb1c1f92d183860ee4d1d51690f865ebda2959bf02404eb5b9979d9\",\"dweb:/ipfs/Qmc9Ssgs8cJcXjaP4ZpGGTeHhJZA59FE1HFzmqTG4CXiGA\"]},\"@kollateral/contracts/utils/ExternalCaller.sol\":{\"keccak256\":\"0x7e00446a63e60493cedc35394d93eae5c346210a56b5a4282128b92de67e2b5a\",\"urls\":[\"bzz-raw://14413ac27a4662905b0c9ec614836c908ef23f1f66b3749c0d9ed789bdab928e\",\"dweb:/ipfs/QmYFijgUS4UqvB8qAhErTQjFnMFN3Jj1WLJaMNR9yihfVG\"]},\"@openzeppelin/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x6080604052606460015534801561001557600080fd5b506001806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505033600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555073234a76352e816c48098f20f830a21c820085b902600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610c47806100fe6000396000f3fe6080604052600436106100345760003560e01c806309c5eabe14610036578063a39d716d146100af578063cab7f521146100b9575b005b6100ad6004803603602081101561004c57600080fd5b810190808035906020019064010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b90919293919293905050506100c3565b005b6100b76100cf565b005b6100c1610172565b005b6100cb610306565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561016f573d6000803e3d6000fd5b50565b600030905060606040518060200160405280600081525090506000600190506000670de0b6b3a76400009050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e02e6a3858585856040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561029957808201518184015260208101905061027e565b50505050905090810190601f1680156102c65780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b5050505050505050565b6000610356610313610424565b61034861271061033a610324610424565b61032c6104ac565b61053490919063ffffffff16565b61057e90919063ffffffff16565b61060490919063ffffffff16565b90506001548111156103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610bc4602e913960400191505060405180910390fd5b6103cc6103be61064e565b336103c76104ac565b6106d6565b610421576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b766024913960400191505060405180910390fd5b50565b60003373ffffffffffffffffffffffffffffffffffffffff1663ff69ac366040518163ffffffff1660e01b815260040160206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d602081101561049657600080fd5b8101908080519060200190929190505050905090565b60003373ffffffffffffffffffffffffffffffffffffffff16636f27e9d86040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d602081101561051e57600080fd5b8101908080519060200190929190505050905090565b600061057683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061080c565b905092915050565b60008083141561059157600090506105fe565b60008284029050828482816105a257fe5b04146105f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610bf26021913960400191505060405180910390fd5b809150505b92915050565b600061064683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506108cc565b905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166311eefd5d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069657600080fd5b505afa1580156106aa573d6000803e3d6000fd5b505050506040513d60208110156106c057600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610740576107378383610992565b60019050610805565b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b505050506040513d60208110156107f157600080fd5b810190808051906020019092919050505090505b9392505050565b60008383111582906108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087e578082015181840152602081019050610863565b50505050905090810190601f1680156108ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610978576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561093d578082015181840152602081019050610922565b50505050905090810190601f16801561096a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161098457fe5b049050809150509392505050565b804710156109eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610b9a602a913960400191505060405180910390fd5b610a05828260405180602001604052806000815250610a09565b5050565b600060608473ffffffffffffffffffffffffffffffffffffffff1684846040518082805190602001908083835b60208310610a595780518252602082019150602081019050602083039250610a36565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610abb576040519150601f19603f3d011682016040523d82523d6000602084013e610ac0565b606091505b5091509150818190610b6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b32578082015181840152602081019050610b17565b50505050905090810190601f168015610b5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050505056fe4b6f6c6c61746572616c496e766f6b61626c653a206661696c656420746f20726570617945787465726e616c43616c6c65723a20696e73756666696369656e742065746865722062616c616e63654b6f6c6c61746572616c496e766f6b61626c653a2072657061796d656e742072657761726420746f6f2068696768536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820e6a44a0f94bd4ddcfade45b3465f5a886e4a26ca7edd9a0f891ef5d9f25cf26264736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c806309c5eabe14610036578063a39d716d146100af578063cab7f521146100b9575b005b6100ad6004803603602081101561004c57600080fd5b810190808035906020019064010000000081111561006957600080fd5b82018360208201111561007b57600080fd5b8035906020019184600183028401116401000000008311171561009d57600080fd5b90919293919293905050506100c3565b005b6100b76100cf565b005b6100c1610172565b005b6100cb610306565b5050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461012957600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561016f573d6000803e3d6000fd5b50565b600030905060606040518060200160405280600081525090506000600190506000670de0b6b3a76400009050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e02e6a3858585856040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001806020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828103825285818151815260200191508051906020019080838360005b8381101561029957808201518184015260208101905061027e565b50505050905090810190601f1680156102c65780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b1580156102e857600080fd5b505af11580156102fc573d6000803e3d6000fd5b5050505050505050565b6000610356610313610424565b61034861271061033a610324610424565b61032c6104ac565b61053490919063ffffffff16565b61057e90919063ffffffff16565b61060490919063ffffffff16565b90506001548111156103b3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180610bc4602e913960400191505060405180910390fd5b6103cc6103be61064e565b336103c76104ac565b6106d6565b610421576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180610b766024913960400191505060405180910390fd5b50565b60003373ffffffffffffffffffffffffffffffffffffffff1663ff69ac366040518163ffffffff1660e01b815260040160206040518083038186803b15801561046c57600080fd5b505afa158015610480573d6000803e3d6000fd5b505050506040513d602081101561049657600080fd5b8101908080519060200190929190505050905090565b60003373ffffffffffffffffffffffffffffffffffffffff16636f27e9d86040518163ffffffff1660e01b815260040160206040518083038186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d602081101561051e57600080fd5b8101908080519060200190929190505050905090565b600061057683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061080c565b905092915050565b60008083141561059157600090506105fe565b60008284029050828482816105a257fe5b04146105f9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180610bf26021913960400191505060405180910390fd5b809150505b92915050565b600061064683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506108cc565b905092915050565b60003373ffffffffffffffffffffffffffffffffffffffff166311eefd5d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561069657600080fd5b505afa1580156106aa573d6000803e3d6000fd5b505050506040513d60208110156106c057600080fd5b8101908080519060200190929190505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161415610740576107378383610992565b60019050610805565b8373ffffffffffffffffffffffffffffffffffffffff1663a9059cbb84846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156107c757600080fd5b505af11580156107db573d6000803e3d6000fd5b505050506040513d60208110156107f157600080fd5b810190808051906020019092919050505090505b9392505050565b60008383111582906108b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561087e578082015181840152602081019050610863565b50505050905090810190601f1680156108ab5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60008083118290610978576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561093d578082015181840152602081019050610922565b50505050905090810190601f16801561096a5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161098457fe5b049050809150509392505050565b804710156109eb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a815260200180610b9a602a913960400191505060405180910390fd5b610a05828260405180602001604052806000815250610a09565b5050565b600060608473ffffffffffffffffffffffffffffffffffffffff1684846040518082805190602001908083835b60208310610a595780518252602082019150602081019050602083039250610a36565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114610abb576040519150601f19603f3d011682016040523d82523d6000602084013e610ac0565b606091505b5091509150818190610b6d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610b32578082015181840152602081019050610b17565b50505050905090810190601f168015610b5f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505050505056fe4b6f6c6c61746572616c496e766f6b61626c653a206661696c656420746f20726570617945787465726e616c43616c6c65723a20696e73756666696369656e742065746865722062616c616e63654b6f6c6c61746572616c496e766f6b61626c653a2072657061796d656e742072657761726420746f6f2068696768536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a265627a7a72315820e6a44a0f94bd4ddcfade45b3465f5a886e4a26ca7edd9a0f891ef5d9f25cf26264736f6c63430005100032",
  "sourceMap": "206:1564:0:-;;;909:3:4;874:38;;374:161:0;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:161:0;957:1:4;878:15:5;859:16;;:34;;;;;;;;;;;;;;;;;;802:98;410:10:0;402:5;;:18;;;;;;;;;;;;;;;;;;455:42;429:15;;:69;;;;;;;;;;;;;;;;;;206:1564;;;;;;",
  "deployedSourceMap": "206:1564:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1171:379;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1171:379:0;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1171:379:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1171:379:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1171:379:0;;;;;;;;;;;;:::i;:::-;;1640:127;;;:::i;:::-;;712:321;;;:::i;:::-;;1171:379;1305:7;:5;:7::i;:::-;1171:379;;:::o;1640:127::-;633:5;;;;;;;;;;;619:19;;:10;:19;;;611:28;;;;;;1700:10;:19;;:42;1720:21;1700:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1700:42:0;1640:127::o;712:321::-;753:10;774:4;753:26;;785:17;:22;;;;;;;;;;;;;;813:20;844:42;813:74;;907:19;929:4;907:26;;968:15;;;;;;;;;;;959:32;;;992:2;996:4;1002:12;1016:11;959:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;959:69:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;959:69:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;959:69:0;;;;712:321;;;;:::o;1017:209:4:-;1957:23;1983:96;2058:20;:18;:20::i;:::-;1983:70;2047:5;1983:50;2012:20;:18;:20::i;:::-;1983:24;:22;:24::i;:::-;:28;;:50;;;;:::i;:::-;:63;;:70;;;;:::i;:::-;:74;;:96;;;;:::i;:::-;1957:122;;2117:15;;2098;:34;;2090:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1093:69;1102:21;:19;:21::i;:::-;1125:10;1137:24;:22;:24::i;:::-;1093:8;:69::i;:::-;1072:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1017:209;:::o;1504:134::-;1557:7;1599:10;1583:46;;;:48;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1583:48:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1583:48:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1583:48:4;;;;;;;;;;;;;;;;1576:55;;1504:134;:::o;1644:142::-;1701:7;1743:10;1727:50;;;:52;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1727:52:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1727:52:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1727:52:4;;;;;;;;;;;;;;;;1720:59;;1644:142;:::o;1274:134:8:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;2159:459::-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;1362:136:4:-;1416:7;1458:10;1442:47;;;:49;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1442:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1442:49:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1442:49:4;;;;;;;;;;;;;;;;1435:56;;1362:136;:::o;906:303:5:-;992:4;1028:16;;;;;;;;;;;1012:32;;:12;:32;;;1008:195;;;1060:28;1077:2;1081:6;1060:16;:28::i;:::-;1109:4;1102:11;;;;1008:195;1158:12;1151:29;;;1181:2;1185:6;1151:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1151:41:5;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1151:41:5;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1151:41:5;;;;;;;;;;;;;;;;1144:48;;906:303;;;;;;:::o;1732:187:8:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;3718:338::-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;656:206:6:-;763:6;738:21;:31;;730:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;826:29;839:3;844:6;826:29;;;;;;;;;;;;:12;:29::i;:::-;656:206;;:::o;868:214::-;959:12;973:23;1000:3;:8;;1015:6;1023:5;1000:29;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1000:29:6;;;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;958:71:6;;;;1047:7;1063:10;1039:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1039:36:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;868:214;;;;;:::o",
  "source": "pragma solidity >= 0.5.0 < 0.7.0;\nimport \"@kollateral/contracts/invoke/IInvoker.sol\";\nimport \"@kollateral/contracts/invoke/KollateralInvokable.sol\";\nimport \"@openzeppelin/contracts/ownership/Ownable.sol\";\n\ncontract AggregatedFlashloans is KollateralInvokable {\n\n  address owner; // contract owner\n  address internal INVOKER_ROPSTEN;\n\n  // initialize deployment parameters\n  constructor() public{\n      owner = msg.sender;\n       INVOKER_ROPSTEN = address(0x234A76352e816c48098F20F830A21c820085b902); //Kollateral inovker on Ropsten\n  }\n\n  // only the contract owner can call fund\n  modifier onlyOwner() {\n      require(msg.sender == owner);\n      _;\n  }\n\n  // initializes the flash loan aggregation parameters\n  function invoke() external payable {\n    address to = address(this);\n    bytes memory data = \"\";\n    address tokenAddress = address(0x0000000000000000000000000000000000000001); //Ropsten ETH\n    uint256 tokenAmount = 1e18; // i.e. 1 ETH worth\n    IInvoker(INVOKER_ROPSTEN).invoke(to, data, tokenAddress, tokenAmount);\n  }\n\n  /**\n    Mid-flash loan aggregation logic i.e. what you do with\n    the temporarily acquired flash liquidity from DyDx and Aave\n  */\n  function execute(bytes calldata data) external payable {\n\n    // ***Step 1: Arbitrage or liquidation or whatever logic goes here\n\n    repay(); // ***Step 2: Repay the aggregated flash loan + above fees\n    /* Remember to factor in:\n        + 6bps in Kollateral aggregation fee\n        + 9bps in native Aave flash loan fee\n        + 3 Wei in native DyDx floan loan fee\n    */\n\n  }\n\n  /**\n    ***Step 3: sweep entire balance on the contract back to contract owner\n  */\n  function WithdrawBalance() public payable onlyOwner {\n      msg.sender.transfer(address(this).balance); // withdraw all ETH\n  }\n\n}\n",
  "sourcePath": "/home/fifi/dev/aggregated-flashloans/contracts/AggregatedFlashloans.sol",
  "ast": {
    "absolutePath": "/home/fifi/dev/aggregated-flashloans/contracts/AggregatedFlashloans.sol",
    "exportedSymbols": {
      "AggregatedFlashloans": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "@kollateral/contracts/invoke/IInvoker.sol",
        "file": "@kollateral/contracts/invoke/IInvoker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 185,
        "src": "34:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kollateral/contracts/invoke/KollateralInvokable.sol",
        "file": "@kollateral/contracts/invoke/KollateralInvokable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 325,
        "src": "86:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 793,
        "src": "149:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "KollateralInvokable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 324,
              "src": "239:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KollateralInvokable_$324",
                "typeString": "contract KollateralInvokable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "239:19:0"
          }
        ],
        "contractDependencies": [
          128,
          324,
          404,
          460
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          324,
          404,
          460,
          128
        ],
        "name": "AggregatedFlashloans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "264:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "264:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "INVOKER_ROPSTEN",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "299:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "394:141:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "402:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "410:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "410:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "402:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "402:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 18,
                      "name": "INVOKER_ROPSTEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "429:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307832333441373633353265383136633438303938463230463833304132316338323030383562393032",
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "455:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x234A76352e816c48098F20F830A21c820085b902"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "447:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "429:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "429:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:0"
            },
            "scope": 97,
            "src": "374:161:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "603:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "619:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "633:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "619:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        879,
                        880
                      ],
                      "referencedDeclaration": 879,
                      "src": "611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "611:28:0"
                },
                {
                  "id": 34,
                  "nodeType": "PlaceholderStatement",
                  "src": "647:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 36,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:0"
            },
            "src": "582:71:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "747:286:0",
              "statements": [
                {
                  "assignments": [
                    40
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "753:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 44,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "774:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                          "typeString": "contract AggregatedFlashloans"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                          "typeString": "contract AggregatedFlashloans"
                        }
                      ],
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "753:26:0"
                },
                {
                  "assignments": [
                    46
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "785:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "",
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "805:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "785:22:0"
                },
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "813:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303031",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x0000000000000000000000000000000000000001"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "813:74:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "tokenAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "907:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "907:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31653138",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "929:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "907:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "992:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "996:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1002:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1016:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "INVOKER_ROPSTEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "968:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59,
                          "name": "IInvoker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "959:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvoker_$184_$",
                            "typeString": "type(contract IInvoker)"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvoker_$184",
                          "typeString": "contract IInvoker"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invoke",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "959:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,address,uint256) payable external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "959:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invoke",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:0"
            },
            "scope": 97,
            "src": "712:321:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1226:324:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "name": "repay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "1305:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:7:0"
                }
              ]
            },
            "documentation": "Mid-flash loan aggregation logic i.e. what you do with\nthe temporarily acquired flash liquidity from DyDx and Aave",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1188:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:21:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:0"
            },
            "scope": 97,
            "src": "1171:379:0",
            "stateMutability": "payable",
            "superFunction": 127,
            "visibility": "external"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1692:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "1728:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                                "typeString": "contract AggregatedFlashloans"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                                "typeString": "contract AggregatedFlashloans"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1720:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1720:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1720:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1700:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1700:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1700:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:42:0"
                }
              ]
            },
            "documentation": "***Step 3: sweep entire balance on the contract back to contract owner",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 82,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "1682:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1682:9:0"
              }
            ],
            "name": "WithdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:2:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:0"
            },
            "scope": 97,
            "src": "1640:127:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 98,
        "src": "206:1564:0"
      }
    ],
    "src": "0:1771:0"
  },
  "legacyAST": {
    "absolutePath": "/home/fifi/dev/aggregated-flashloans/contracts/AggregatedFlashloans.sol",
    "exportedSymbols": {
      "AggregatedFlashloans": [
        97
      ]
    },
    "id": 98,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0",
          "<",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:33:0"
      },
      {
        "absolutePath": "@kollateral/contracts/invoke/IInvoker.sol",
        "file": "@kollateral/contracts/invoke/IInvoker.sol",
        "id": 2,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 185,
        "src": "34:51:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@kollateral/contracts/invoke/KollateralInvokable.sol",
        "file": "@kollateral/contracts/invoke/KollateralInvokable.sol",
        "id": 3,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 325,
        "src": "86:62:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/ownership/Ownable.sol",
        "file": "@openzeppelin/contracts/ownership/Ownable.sol",
        "id": 4,
        "nodeType": "ImportDirective",
        "scope": 98,
        "sourceUnit": 793,
        "src": "149:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 5,
              "name": "KollateralInvokable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 324,
              "src": "239:19:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_KollateralInvokable_$324",
                "typeString": "contract KollateralInvokable"
              }
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "239:19:0"
          }
        ],
        "contractDependencies": [
          128,
          324,
          404,
          460
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 97,
        "linearizedBaseContracts": [
          97,
          324,
          404,
          460,
          128
        ],
        "name": "AggregatedFlashloans",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "name": "owner",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "264:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 7,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "264:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "name": "INVOKER_ROPSTEN",
            "nodeType": "VariableDeclaration",
            "scope": 97,
            "src": "299:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "299:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 24,
              "nodeType": "Block",
              "src": "394:141:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 16,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 13,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "402:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 14,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 876,
                        "src": "410:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 15,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "410:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "402:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 17,
                  "nodeType": "ExpressionStatement",
                  "src": "402:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 22,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 18,
                      "name": "INVOKER_ROPSTEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "429:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307832333441373633353265383136633438303938463230463833304132316338323030383562393032",
                          "id": 20,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "455:42:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x234A76352e816c48098F20F830A21c820085b902"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 19,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "447:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": "address"
                      },
                      "id": 21,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "447:51:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "429:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23,
                  "nodeType": "ExpressionStatement",
                  "src": "429:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 25,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:2:0"
            },
            "returnParameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "394:0:0"
            },
            "scope": 97,
            "src": "374:161:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "603:50:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 28,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 876,
                            "src": "619:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "619:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 30,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "633:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "619:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 27,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        879,
                        880
                      ],
                      "referencedDeclaration": 879,
                      "src": "611:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "611:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "611:28:0"
                },
                {
                  "id": 34,
                  "nodeType": "PlaceholderStatement",
                  "src": "647:1:0"
                }
              ]
            },
            "documentation": null,
            "id": 36,
            "name": "onlyOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 26,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:2:0"
            },
            "src": "582:71:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 69,
              "nodeType": "Block",
              "src": "747:286:0",
              "statements": [
                {
                  "assignments": [
                    40
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40,
                      "name": "to",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "753:10:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 39,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "753:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 44,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 42,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 910,
                        "src": "774:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                          "typeString": "contract AggregatedFlashloans"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                          "typeString": "contract AggregatedFlashloans"
                        }
                      ],
                      "id": 41,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "766:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "766:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "753:26:0"
                },
                {
                  "assignments": [
                    46
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46,
                      "name": "data",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "785:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 45,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 48,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "",
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "805:2:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "785:22:0"
                },
                {
                  "assignments": [
                    50
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50,
                      "name": "tokenAddress",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "813:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 49,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 54,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303031",
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "844:42:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        "value": "0x0000000000000000000000000000000000000001"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 51,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "836:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "836:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "813:74:0"
                },
                {
                  "assignments": [
                    56
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 56,
                      "name": "tokenAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 69,
                      "src": "907:19:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 55,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "907:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 58,
                  "initialValue": {
                    "argumentTypes": null,
                    "hexValue": "31653138",
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "929:4:0",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000"
                    },
                    "value": "1e18"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "907:26:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 63,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "992:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 64,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46,
                        "src": "996:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 65,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50,
                        "src": "1002:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 66,
                        "name": "tokenAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56,
                        "src": "1016:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 60,
                            "name": "INVOKER_ROPSTEN",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10,
                            "src": "968:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 59,
                          "name": "IInvoker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "959:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IInvoker_$184_$",
                            "typeString": "type(contract IInvoker)"
                          }
                        },
                        "id": 61,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "959:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInvoker_$184",
                          "typeString": "contract IInvoker"
                        }
                      },
                      "id": 62,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "invoke",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "959:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,bytes memory,address,uint256) payable external"
                      }
                    },
                    "id": 67,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "959:69:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68,
                  "nodeType": "ExpressionStatement",
                  "src": "959:69:0"
                }
              ]
            },
            "documentation": null,
            "id": 70,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invoke",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "747:0:0"
            },
            "scope": 97,
            "src": "712:321:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 78,
              "nodeType": "Block",
              "src": "1226:324:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 75,
                      "name": "repay",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 231,
                      "src": "1305:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 76,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1305:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 77,
                  "nodeType": "ExpressionStatement",
                  "src": "1305:7:0"
                }
              ]
            },
            "documentation": "Mid-flash loan aggregation logic i.e. what you do with\nthe temporarily acquired flash liquidity from DyDx and Aave",
            "id": 79,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "execute",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 72,
                  "name": "data",
                  "nodeType": "VariableDeclaration",
                  "scope": 79,
                  "src": "1188:19:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 71,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1187:21:0"
            },
            "returnParameters": {
              "id": 74,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:0:0"
            },
            "scope": 97,
            "src": "1171:379:0",
            "stateMutability": "payable",
            "superFunction": 127,
            "visibility": "external"
          },
          {
            "body": {
              "id": 95,
              "nodeType": "Block",
              "src": "1692:75:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 90,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 910,
                              "src": "1728:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                                "typeString": "contract AggregatedFlashloans"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AggregatedFlashloans_$97",
                                "typeString": "contract AggregatedFlashloans"
                              }
                            ],
                            "id": 89,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1720:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 91,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1720:13:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 92,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1720:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 84,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1700:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 87,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1700:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1700:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1700:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1700:42:0"
                }
              ]
            },
            "documentation": "***Step 3: sweep entire balance on the contract back to contract owner",
            "id": 96,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 82,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 81,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 36,
                  "src": "1682:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1682:9:0"
              }
            ],
            "name": "WithdrawBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:2:0"
            },
            "returnParameters": {
              "id": 83,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1692:0:0"
            },
            "scope": 97,
            "src": "1640:127:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 98,
        "src": "206:1564:0"
      }
    ],
    "src": "0:1771:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "3": {
      "events": {},
      "links": {},
      "address": "0x9595738E0639798a3aBE3e0013d950bBCA306EB0",
      "transactionHash": "0x42a0ab2d798b42792f0296262042da226875f2c2c0e931d4f254c84ea09e7b28"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2020-09-23T05:39:50.624Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {
      "WithdrawBalance()": {
        "notice": "***Step 3: sweep entire balance on the contract back to contract owner"
      },
      "execute(bytes)": {
        "notice": "Mid-flash loan aggregation logic i.e. what you do with the temporarily acquired flash liquidity from DyDx and Aave"
      }
    }
  }
}